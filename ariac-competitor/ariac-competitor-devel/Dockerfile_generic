# -----------------------------------------------------
# Ubuntu and VNC
# -----------------------------------------------------
# Based on https://hub.docker.com/r/ct2034/vnc-ros-kinetic-full/dockerfile

FROM ubuntu:xenial

ENV DEBIAN_FRONTEND noninteractive

# Install vnc, xvfb in order to create a 'fake' display
RUN apt-get update && \
    apt-get install -y --no-install-recommends --allow-unauthenticated \
        software-properties-common curl && \
    sh -c "echo 'deb http://download.opensuse.org/repositories/home:/Horst3180/xUbuntu_16.04/ /' >> /etc/apt/sources.list.d/arc-theme.list" && \
    curl -SL http://download.opensuse.org/repositories/home:Horst3180/xUbuntu_16.04/Release.key | apt-key add - && \
    add-apt-repository ppa:fcwu-tw/ppa && \
    apt-get update && \
    apt-get install -y --no-install-recommends --allow-unauthenticated \
        supervisor \
        openssh-server pwgen sudo vim-tiny \
        net-tools \
        lxde x11vnc xvfb \
        gtk2-engines-murrine ttf-ubuntu-font-family \
        firefox \
        nginx \
        python-pip python-dev build-essential \
        mesa-utils libgl1-mesa-dri \
        gnome-themes-standard gtk2-engines-pixbuf gtk2-engines-murrine pinta arc-theme \
        dbus-x11 x11-utils \
        terminator && \
    apt-get autoclean && \
    apt-get autoremove && \
    rm -rf /var/lib/apt/lists/*

# User tools
RUN apt-get update && apt-get install -y \
    terminator \
    gedit \
    okular \
    vim \
    && rm -rf /var/lib/apt/lists/*

# Tini for subreap
ENV TINI_VERSION v0.9.0
ADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /bin/tini
RUN chmod +x /bin/tini

ADD image /
RUN pip install --upgrade pip
RUN pip install setuptools wheel && pip install -r /usr/lib/web/requirements.txt

RUN cp /usr/share/applications/terminator.desktop /root/Desktop
RUN echo "source /opt/ros/kinetic/setup.bash" >> /root/.bashrc

# Setup environment
EXPOSE 80

# -----------------------------------------------------
# Gazebo
# -----------------------------------------------------

# gzserver
# ------------------------------------------

ARG UBUNTU_DISTRO_TO_BUILD=xenial
ARG ROS_DISTRO_BUILD_TIME=kinetic

# Setup keys
RUN apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-keys D2486D2DD83DB69272AFE98867170598AF249743
# Setup sources.list
RUN echo "deb http://packages.osrfoundation.org/gazebo/ubuntu-stable ${UBUNTU_DISTRO_TO_BUILD} main" > /etc/apt/sources.list.d/gazebo-latest.list

# Install gazebo packages
RUN apt-get update && apt-get install -q -y --allow-unauthenticated \
        gazebo8 \
        libgazebo8-dev && \
    rm -rf /var/lib/apt/lists/*

# Setup environment
EXPOSE 11345

# gazebo
# ------------------------------------------

ARG USERID=1000

ENV DEBIAN_FRONTEND noninteractive
ENV LANG en_US.UTF-8

# Install bootstrap tools
#     sudo \
RUN apt-get update && apt-get install --no-install-recommends -y --allow-unauthenticated \
        bash-completion \
        git \
        wget \
        locales && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Create a new user called ariac. Note: we don't add them to the sudo group
ENV USERNAME ariac
RUN locale-gen en_US.UTF-8
RUN adduser -u $USERID --gecos "Development User" --disabled-password $USERNAME
RUN echo "export QT_X11_NO_MITSHM=1" >> /home/$USERNAME/.bashrc

USER $USERNAME
WORKDIR /home/$USERNAME

# Get gazebo models by cloning repository
# Do it early since it's big
RUN git clone https://github.com/osrf/gazebo_models $HOME/.gazebo/models

# -----------------------------------------------------
# ROS (gazebo-ros)
# -----------------------------------------------------
# Instructions derived from https://github.com/osrf/docker_images/tree/master/ros

USER root

# Setup ROS keys
RUN apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-keys 421C365BD9FF1F717815A3895523BAEEB01FA116
# Setup sources.list
RUN echo "deb http://packages.ros.org/ros/ubuntu ${UBUNTU_DISTRO_TO_BUILD} main" > /etc/apt/sources.list.d/ros-latest.list

# Install bootstrap tools
RUN apt-get update && apt-get install --no-install-recommends -y --allow-unauthenticated \
    python-rosdep \
    python-rosinstall \
    python-vcstools \
    && rm -rf /var/lib/apt/lists/*

# Bootstrap rosdep
RUN rosdep init \
    && rosdep update

# Install ros packages
ENV ROS_DISTRO ${ROS_DISTRO_BUILD_TIME}
RUN apt-get update && apt-get install -y --allow-unauthenticated \
    ros-${ROS_DISTRO_BUILD_TIME}-desktop \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# -----------------------------------------------------
# [!] COMPETITOR specific ROS packages
# -----------------------------------------------------

# Install moveit!
RUN apt-get update && apt-get install -y --allow-unauthenticated \
    ros-${ROS_DISTRO_BUILD_TIME}-moveit \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*
    
# -----------------------------------------------------
# ARIAC 2018 (ariac-server)
# -----------------------------------------------------

USER root

# Install the ariac package
RUN apt-get update && apt-get install -y --allow-unauthenticated \
        ros-${ROS_DISTRO_BUILD_TIME}-ros-controllers \
        ros-${ROS_DISTRO_BUILD_TIME}-robot-state-publisher \
        ariac2 \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Needed to use killall
RUN apt-get update && apt-get install -y --allow-unauthenticated \
        psmisc \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Need to install a specific version of gazebo_ros_pkgs
# 1. Remove official packages
RUN export GZ_VERSION=8 && \
    dpkg -r --force-depends ros-${ROS_DISTRO_BUILD_TIME}-gazebo${GZ_VERSION}-ros-pkgs \
                            ros-${ROS_DISTRO_BUILD_TIME}-gazebo${GZ_VERSION}-ros \
                            ros-${ROS_DISTRO_BUILD_TIME}-gazebo${GZ_VERSION}-plugins \
                            ros-${ROS_DISTRO_BUILD_TIME}-gazebo${GZ_VERSION}-msgs \
                            ros-${ROS_DISTRO_BUILD_TIME}-gazebo${GZ_VERSION}-ros-control

# 2. Build the version from source
RUN mkdir -p /tmp/ros_ws/src
RUN /bin/bash -c "source /opt/ros/${ROS_DISTRO_BUILD_TIME}/setup.bash && \
                  cd /tmp/ros_ws/src && \
                  catkin_init_workspace"
RUN git clone \
      https://github.com/dgerod/ariac-2018_gazebo_ros /tmp/ros_ws/src/gazebo_ros_pkgs \
      -b ariac_2018
RUN /bin/bash -c "source /opt/ros/${ROS_DISTRO_BUILD_TIME}/setup.bash && \
                  cd /tmp/ros_ws/ && \
                  catkin_make -DCMAKE_INSTALL_PREFIX=/opt/ros/${ROS_DISTRO_BUILD_TIME} -j2 install "

# -----------------------------------------------------
# [!] COMPETITOR specific packages
# -----------------------------------------------------

# Install IIWA Stack from source
RUN git clone \
    https://github.com/dgerod/ariac-2018_iiwa_stack /tmp/ros_ws/src/iiwa_stack \
    -b ariac_2018 

RUN /bin/bash -c "source /opt/ros/${ROS_DISTRO_BUILD_TIME}/setup.bash && \
                  cd /tmp/ros_ws/ && \
                  catkin_make -DCMAKE_INSTALL_PREFIX=/opt/ros/${ROS_DISTRO_BUILD_TIME} -j2 install "

# -----------------------------------------------------
# Entry point
# -----------------------------------------------------

COPY ./ariac_entrypoint.sh /
COPY ./run_ariac_task.sh /
COPY ./run_ariac_task_gui.sh /

ENV USERNAME ariac-user
RUN adduser --gecos "Development User" --disabled-password $USERNAME
RUN adduser $USERNAME sudo
WORKDIR /home/$USERNAME

ENV HOME=/home/ariac-user \
    SHELL=/bin/bash
ENTRYPOINT ["/ariac_entrypoint.sh"]
